{
  "name": "fc-log4j-filepulse-source-flatten",
  "config": {
    "connector.class": "io.streamthoughts.kafka.connect.filepulse.source.FilePulseSourceConnector",
    "filters": "GroupMultilineException, ParseLog4jLog, MyJsonFilter",
    "filters.GroupMultilineException.negate": "false",
    "filters.GroupMultilineException.pattern": "^[\\t]",
    "filters.GroupMultilineException.type": "io.streamthoughts.kafka.connect.filepulse.filter.MultiRowFilter",
    "filters.ParseLog4jLog.pattern": "%{TIMESTAMP_ISO8601:logdate} %{LOGLEVEL:loglevel} %{GREEDYDATA:message}",
    "filters.ParseLog4jLog.overwrite": "message",
    "filters.ParseLog4jLog.source": "message",
    "filters.ParseLog4jLog.type": "io.streamthoughts.kafka.connect.filepulse.filter.GrokFilter",
    "filters.ParseLog4jLog.ignoreFailure": "true",
    "fs.cleanup.policy.class": "io.streamthoughts.kafka.connect.filepulse.fs.clean.LogCleanupPolicy",
    "fs.listing.class" : "io.streamthoughts.kafka.connect.filepulse.fs.LocalFSDirectoryListing",
    "fs.listing.directory.path" : "/home/ubuntu/weblog/",
    "fs.listing.filters": "io.streamthoughts.kafka.connect.filepulse.fs.filter.RegexFileListFilter",
    "fs.listing.interval.ms": "10000",
    "file.filter.regex.pattern": "weblog.log",
    "tasks.file.status.storage.bootstrap.servers" : "172.31.8.119:9092",
    "offset.strategy": "name",
    "read.max.wait.ms": "5000",
    "tasks.reader.class": "io.streamthoughts.kafka.connect.filepulse.fs.reader.LocalRowFileInputReader",
    "topic": "fc-log4j-filepulse-source",
    "tasks.max": 1,
    "key.converter": "org.apache.kafka.connect.json.JsonConverter",
    "value.converter": "org.apache.kafka.connect.json.JsonConverter",
    "key.converter.schemas.enable": "false",
    "value.converter.schemas.enable": "false",
    "filters.MyJsonFilter.type" : "io.streamthoughts.kafka.connect.filepulse.filter.JSONFilter",
    "filters.MyJsonFilter.source" : "message",
    "filters.MyJsonFilter.target" : "ub",
    "transforms": "removeMessageField, flatten",
    "transforms.removeMessageField.type": "org.apache.kafka.connect.transforms.ReplaceField$Value",
    "transforms.removeMessageField.blacklist": "message",
    "transforms.flatten.type": "org.apache.kafka.connect.transforms.Flatten$Value",
    "transforms.flatten.fields" : "contents"
  }
}
